//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0.5-b02-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.07.03 at 02:25:49 PM EDT 
//


package edu.umd.cs.guitar.model.data;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the edu.umd.cs.guitar.model.data package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: edu.umd.cs.guitar.model.data
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link ContainerType }
     * 
     */
    public ContainerType createContainerType() {
        return new ContainerType();
    }

    /**
     * Create an instance of {@link EventEffectSetType }
     * 
     */
    public EventEffectSetType createEventEffectSetType() {
        return new EventEffectSetType();
    }

    /**
     * Create an instance of {@link WidgetMapElementType }
     * 
     */
    public WidgetMapElementType createWidgetMapElementType() {
        return new WidgetMapElementType();
    }

    /**
     * Create an instance of {@link ComponentListType }
     * 
     */
    public ComponentListType createComponentListType() {
        return new ComponentListType();
    }

    /**
     * Create an instance of {@link EventStateSetType }
     * 
     */
    public EventStateSetType createEventStateSetType() {
        return new EventStateSetType();
    }

    /**
     * Create an instance of {@link TestCase }
     * 
     */
    public TestCase createTestCase() {
        return new TestCase();
    }

    /**
     * Create an instance of {@link RowType }
     * 
     */
    public RowType createRowType() {
        return new RowType();
    }

    /**
     * Create an instance of {@link AttributesType }
     * 
     */
    public AttributesType createAttributesType() {
        return new AttributesType();
    }

    /**
     * Create an instance of {@link EdgeMappingType }
     * 
     */
    public EdgeMappingType createEdgeMappingType() {
        return new EdgeMappingType();
    }

    /**
     * Create an instance of {@link GUIType }
     * 
     */
    public GUIType createGUIType() {
        return new GUIType();
    }

    /**
     * Create an instance of {@link EventMapElementType }
     * 
     */
    public EventMapElementType createEventMapElementType() {
        return new EventMapElementType();
    }

    /**
     * Create an instance of {@link EventGraphType }
     * 
     */
    public EventGraphType createEventGraphType() {
        return new EventGraphType();
    }

    /**
     * Create an instance of {@link PropertyType }
     * 
     */
    public PropertyType createPropertyType() {
        return new PropertyType();
    }

    /**
     * Create an instance of {@link EventSequenceSetType }
     * 
     */
    public EventSequenceSetType createEventSequenceSetType() {
        return new EventSequenceSetType();
    }

    /**
     * Create an instance of {@link EventStateType }
     * 
     */
    public EventStateType createEventStateType() {
        return new EventStateType();
    }

    /**
     * Create an instance of {@link Mapping }
     * 
     */
    public Mapping createMapping() {
        return new Mapping();
    }

    /**
     * Create an instance of {@link EventSetType }
     * 
     */
    public EventSetType createEventSetType() {
        return new EventSetType();
    }

    /**
     * Create an instance of {@link EventMachine }
     * 
     */
    public EventMachine createEventMachine() {
        return new EventMachine();
    }

    /**
     * Create an instance of {@link WidgetMapType }
     * 
     */
    public WidgetMapType createWidgetMapType() {
        return new WidgetMapType();
    }

    /**
     * Create an instance of {@link GUIStructure }
     * 
     */
    public GUIStructure createGUIStructure() {
        return new GUIStructure();
    }

    /**
     * Create an instance of {@link ContentsType }
     * 
     */
    public ContentsType createContentsType() {
        return new ContentsType();
    }

    /**
     * Create an instance of {@link TransitionSetType }
     * 
     */
    public TransitionSetType createTransitionSetType() {
        return new TransitionSetType();
    }

    /**
     * Create an instance of {@link EventsType }
     * 
     */
    public EventsType createEventsType() {
        return new EventsType();
    }

    /**
     * Create an instance of {@link InitialMappingType }
     * 
     */
    public InitialMappingType createInitialMappingType() {
        return new InitialMappingType();
    }

    /**
     * Create an instance of {@link ComponentType }
     * 
     */
    public ComponentType createComponentType() {
        return new ComponentType();
    }

    /**
     * Create an instance of {@link EFG }
     * 
     */
    public EFG createEFG() {
        return new EFG();
    }

    /**
     * Create an instance of {@link MappingType }
     * 
     */
    public MappingType createMappingType() {
        return new MappingType();
    }

    /**
     * Create an instance of {@link EventTrace }
     * 
     */
    public EventTrace createEventTrace() {
        return new EventTrace();
    }

    /**
     * Create an instance of {@link StepType }
     * 
     */
    public StepType createStepType() {
        return new StepType();
    }

    /**
     * Create an instance of {@link EventEffectType }
     * 
     */
    public EventEffectType createEventEffectType() {
        return new EventEffectType();
    }

    /**
     * Create an instance of {@link LogWidget }
     * 
     */
    public LogWidget createLogWidget() {
        return new LogWidget();
    }

    /**
     * Create an instance of {@link TransitionType }
     * 
     */
    public TransitionType createTransitionType() {
        return new TransitionType();
    }

    /**
     * Create an instance of {@link InitialMappingListType }
     * 
     */
    public InitialMappingListType createInitialMappingListType() {
        return new InitialMappingListType();
    }

    /**
     * Create an instance of {@link EventMapType }
     * 
     */
    public EventMapType createEventMapType() {
        return new EventMapType();
    }

    /**
     * Create an instance of {@link FullComponentType }
     * 
     */
    public FullComponentType createFullComponentType() {
        return new FullComponentType();
    }

    /**
     * Create an instance of {@link GUIMap }
     * 
     */
    public GUIMap createGUIMap() {
        return new GUIMap();
    }

    /**
     * Create an instance of {@link EdgeMappingListType }
     * 
     */
    public EdgeMappingListType createEdgeMappingListType() {
        return new EdgeMappingListType();
    }

    /**
     * Create an instance of {@link EventSequenceType }
     * 
     */
    public EventSequenceType createEventSequenceType() {
        return new EventSequenceType();
    }

    /**
     * Create an instance of {@link EventType }
     * 
     */
    public EventType createEventType() {
        return new EventType();
    }

    /**
     * Create an instance of {@link PathType }
     * 
     */
    public PathType createPathType() {
        return new PathType();
    }

    /**
     * Create an instance of {@link Configuration }
     * 
     */
    public Configuration createConfiguration() {
        return new Configuration();
    }

}
